{"/home/faraz/Desktop/TATA-AIG-MealsTracker/dbConnector/adminRequests.js":{"path":"/home/faraz/Desktop/TATA-AIG-MealsTracker/dbConnector/adminRequests.js","statementMap":{"0":{"start":{"line":3,"column":18},"end":{"line":3,"column":60}},"1":{"start":{"line":7,"column":4},"end":{"line":7,"column":41}},"2":{"start":{"line":11,"column":21},"end":{"line":14,"column":5}},"3":{"start":{"line":15,"column":4},"end":{"line":15,"column":72}},"4":{"start":{"line":19,"column":21},"end":{"line":21,"column":5}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":66}},"6":{"start":{"line":26,"column":21},"end":{"line":29,"column":5}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":66}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":2},"end":{"line":6,"column":3}},"loc":{"start":{"line":6,"column":16},"end":{"line":8,"column":3}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":2},"end":{"line":10,"column":3}},"loc":{"start":{"line":10,"column":38},"end":{"line":16,"column":3}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":2},"end":{"line":18,"column":3}},"loc":{"start":{"line":18,"column":25},"end":{"line":23,"column":3}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":2},"end":{"line":25,"column":3}},"loc":{"start":{"line":25,"column":29},"end":{"line":31,"column":3}},"line":25}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":1,"8":1},"f":{"0":1,"1":1,"2":0,"3":1},"b":{},"inputSourceMap":{"version":3,"sources":["adminRequests.js"],"names":["DataService","require","AdminRequestDbConnector","constructor","dataService","addNewRequest","body","password","sqlQuery","text","values","name","email","executeQueryAsPromise","getAllRequests","deleteRequest","module","exports"],"mappings":"AAAA;;AACA,IAAIA,cAAcC,QAAQ,iCAAR,CAAlB;;AAEA,MAAMC,uBAAN,CAA8B;AAC5BC,gBAAc;AACZ,SAAKC,WAAL,GAAmB,IAAIJ,WAAJ,EAAnB;AACD;;AAED,QAAMK,aAAN,CAAoBC,IAApB,EAA0BC,QAA1B,EAAoC;AAClC,UAAMC,WAAW;AACfC,YAAO,8FADQ;AAEfC,cAAQ,CAACJ,KAAKK,IAAN,EAAYL,KAAKM,KAAjB,EAAwBL,QAAxB;AAFO,KAAjB;AAIA,WAAO,MAAM,KAAKH,WAAL,CAAiBS,qBAAjB,CAAuCL,QAAvC,EAAiD,IAAjD,CAAb;AACD;;AAED,QAAMM,cAAN,GAAuB;AACrB,UAAMN,WAAW;AACfC,YAAO;AADQ,KAAjB;AAGA,WAAO,MAAM,KAAKL,WAAL,CAAiBS,qBAAjB,CAAuCL,QAAvC,CAAb;AACD;;AAED,QAAMO,aAAN,CAAoBH,KAApB,EAA2B;AACzB,UAAMJ,WAAW;AACfC,YAAO,+EADQ;AAEfC,cAAQ,CAACE,KAAD;AAFO,KAAjB;AAIA,WAAO,MAAM,KAAKR,WAAL,CAAiBS,qBAAjB,CAAuCL,QAAvC,CAAb;AACD;AA1B2B;;AA6B9BQ,OAAOC,OAAP,GAAiBf,uBAAjB","file":"adminRequests.js","sourceRoot":"/home/faraz/Desktop/TATA-AIG-MealsTracker/dbConnector","sourcesContent":["\"use strict\";\nlet DataService = require(\"../utils/datasource/DataService\");\n\nclass AdminRequestDbConnector {\n  constructor() {\n    this.dataService = new DataService();\n  }\n\n  async addNewRequest(body, password) {\n    const sqlQuery = {\n      text: `INSERT INTO admin_requests (name, email, password) VALUES ($1, $2, $3) RETURNING name, email`,\n      values: [body.name, body.email, password],\n    };\n    return await this.dataService.executeQueryAsPromise(sqlQuery, true);\n  }\n\n  async getAllRequests() {\n    const sqlQuery = {\n      text: `SELECT * from admin_requests`,\n    };\n    return await this.dataService.executeQueryAsPromise(sqlQuery);\n  }\n\n  async deleteRequest(email) {\n    const sqlQuery = {\n      text: `DELETE from admin_requests WHERE email = ($1) RETURNING name, email, password`,\n      values: [email],\n    };\n    return await this.dataService.executeQueryAsPromise(sqlQuery);\n  }\n}\n\nmodule.exports = AdminRequestDbConnector;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a0c24118a6c6786c9ef268fa8c25aff9c0bbc379","contentHash":"5cd0da63f669b6eed928700b677db1b2e08921c981f9fd83a5a0314a2738d90f"},"/home/faraz/Desktop/TATA-AIG-MealsTracker/utils/datasource/DataService.js":{"path":"/home/faraz/Desktop/TATA-AIG-MealsTracker/utils/datasource/DataService.js","statementMap":{"0":{"start":{"line":3,"column":11},"end":{"line":3,"column":24}},"1":{"start":{"line":4,"column":23},"end":{"line":4,"column":68}},"2":{"start":{"line":8,"column":4},"end":{"line":14,"column":7}},"3":{"start":{"line":15,"column":4},"end":{"line":17,"column":7}},"4":{"start":{"line":16,"column":6},"end":{"line":16,"column":58}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":37}},"6":{"start":{"line":22,"column":25},"end":{"line":26,"column":5}},"7":{"start":{"line":28,"column":4},"end":{"line":56,"column":7}},"8":{"start":{"line":29,"column":6},"end":{"line":55,"column":7}},"9":{"start":{"line":30,"column":23},"end":{"line":30,"column":56}},"10":{"start":{"line":31,"column":8},"end":{"line":47,"column":9}},"11":{"start":{"line":32,"column":10},"end":{"line":32,"column":38}},"12":{"start":{"line":33,"column":10},"end":{"line":33,"column":36}},"13":{"start":{"line":34,"column":10},"end":{"line":34,"column":74}},"14":{"start":{"line":35,"column":10},"end":{"line":35,"column":42}},"15":{"start":{"line":36,"column":10},"end":{"line":36,"column":32}},"16":{"start":{"line":37,"column":15},"end":{"line":47,"column":9}},"17":{"start":{"line":38,"column":10},"end":{"line":38,"column":36}},"18":{"start":{"line":39,"column":10},"end":{"line":39,"column":85}},"19":{"start":{"line":40,"column":10},"end":{"line":40,"column":32}},"20":{"start":{"line":42,"column":10},"end":{"line":42,"column":38}},"21":{"start":{"line":43,"column":10},"end":{"line":43,"column":36}},"22":{"start":{"line":44,"column":10},"end":{"line":44,"column":67}},"23":{"start":{"line":45,"column":10},"end":{"line":45,"column":42}},"24":{"start":{"line":46,"column":10},"end":{"line":46,"column":32}},"25":{"start":{"line":48,"column":8},"end":{"line":48,"column":24}},"26":{"start":{"line":50,"column":8},"end":{"line":50,"column":34}},"27":{"start":{"line":51,"column":8},"end":{"line":51,"column":51}},"28":{"start":{"line":52,"column":8},"end":{"line":52,"column":41}},"29":{"start":{"line":53,"column":8},"end":{"line":53,"column":29}},"30":{"start":{"line":54,"column":8},"end":{"line":54,"column":24}},"31":{"start":{"line":60,"column":0},"end":{"line":60,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":2},"end":{"line":7,"column":3}},"loc":{"start":{"line":7,"column":31},"end":{"line":19,"column":3}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":26},"end":{"line":15,"column":27}},"loc":{"start":{"line":15,"column":45},"end":{"line":17,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":2},"end":{"line":21,"column":3}},"loc":{"start":{"line":21,"column":52},"end":{"line":57,"column":3}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":23},"end":{"line":28,"column":24}},"loc":{"start":{"line":28,"column":50},"end":{"line":56,"column":5}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":34},"end":{"line":21,"column":50}},"type":"default-arg","locations":[{"start":{"line":21,"column":45},"end":{"line":21,"column":50}}],"line":21},"1":{"loc":{"start":{"line":31,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":47,"column":9}},{"start":{"line":31,"column":8},"end":{"line":47,"column":9}}],"line":31},"2":{"loc":{"start":{"line":37,"column":15},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":15},"end":{"line":47,"column":9}},{"start":{"line":37,"column":15},"end":{"line":47,"column":9}}],"line":37}},"s":{"0":1,"1":1,"2":2,"3":2,"4":0,"5":2,"6":2,"7":2,"8":2,"9":2,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1},"f":{"0":2,"1":0,"2":2,"3":2},"b":{"0":[1],"1":[0,1],"2":[1,0]},"inputSourceMap":{"version":3,"sources":["DataService.js"],"names":["Pg","require","DatabaseConfig","PostgresDatabase","DataService","executeQuery","sqlQuery","pool","Pool","user","host","database","password","port","on","error","client","console","query","executeQueryAsPromise","isInsert","queryMessage","success","status","message","Promise","resolve","reject","result","data","rows","rowCount","end","err","module","exports"],"mappings":"AAAA;;AACA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,iBAAiBD,QAAQ,mBAAR,EAA6BE,gBAApD;;AAEA,MAAMC,WAAN,CAAkB;AAChB,QAAMC,YAAN,CAAmBC,QAAnB,EAA6B;AAC3B,SAAKC,IAAL,GAAY,IAAIP,GAAGQ,IAAP,CAAY;AACtBC,YAAMP,eAAeO,IADC;AAEtBC,YAAMR,eAAeQ,IAFC;AAGtBC,gBAAUT,eAAeS,QAHH;AAItBC,gBAAUV,eAAeU,QAJH;AAKtBC,YAAMX,eAAeW;AALC,KAAZ,CAAZ;AAOA,SAAKN,IAAL,CAAUO,EAAV,CAAa,OAAb,EAAsB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvCC,cAAQF,KAAR,CAAe,6BAA4BA,KAAM,EAAjD;AACD,KAFD;AAGA,WAAO,KAAKR,IAAL,CAAUW,KAAV,CAAgBZ,QAAhB,CAAP;AACD;;AAEDa,wBAAsBb,QAAtB,EAAgCc,WAAW,KAA3C,EAAkD;AAChD,UAAMC,eAAe;AACnBC,eAAS,KADU;AAEnBC,cAAQ,GAFW;AAGnBC,eAAS;AAHU,KAArB;;AAMA,WAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5C,UAAI;AACF,cAAMC,SAAS,MAAM,KAAKvB,YAAL,CAAkBC,QAAlB,CAArB;AACA,YAAIc,QAAJ,EAAc;AACZC,uBAAaC,OAAb,GAAuB,IAAvB;AACAD,uBAAaE,MAAb,GAAsB,GAAtB;AACAF,uBAAaG,OAAb,GAAuB,wCAAvB;AACAH,uBAAaQ,IAAb,GAAoBD,OAAOE,IAA3B;AACAJ,kBAAQL,YAAR;AACD,SAND,MAMO,IAAIO,OAAOG,QAAP,KAAoB,CAAxB,EAA2B;AAChCV,uBAAaE,MAAb,GAAsB,GAAtB;AACAF,uBAAaG,OAAb,GACE,mDADF;AAEAE,kBAAQL,YAAR;AACD,SALM,MAKA;AACLA,uBAAaC,OAAb,GAAuB,IAAvB;AACAD,uBAAaE,MAAb,GAAsB,GAAtB;AACAF,uBAAaG,OAAb,GAAuB,iCAAvB;AACAH,uBAAaQ,IAAb,GAAoBD,OAAOE,IAA3B;AACAJ,kBAAQL,YAAR;AACD;AACD,aAAKd,IAAL,CAAUyB,GAAV;AACD,OArBD,CAqBE,OAAOC,GAAP,EAAY;AACZZ,qBAAaE,MAAb,GAAsB,GAAtB;AACAF,qBAAaG,OAAb,GAAuB,mBAAvB;AACAH,qBAAaN,KAAb,GAAqBkB,IAAIT,OAAzB;AACAG,eAAON,YAAP;AACA,aAAKd,IAAL,CAAUyB,GAAV;AACD;AACF,KA7BM,CAAP;AA8BD;AApDe;;AAuDlBE,OAAOC,OAAP,GAAiB/B,WAAjB","file":"DataService.js","sourceRoot":"/home/faraz/Desktop/TATA-AIG-MealsTracker/utils/datasource","sourcesContent":["\"use strict\";\nconst Pg = require(\"pg\");\nconst DatabaseConfig = require(\"../../Config.json\").PostgresDatabase;\n\nclass DataService {\n  async executeQuery(sqlQuery) {\n    this.pool = new Pg.Pool({\n      user: DatabaseConfig.user,\n      host: DatabaseConfig.host,\n      database: DatabaseConfig.database,\n      password: DatabaseConfig.password,\n      port: DatabaseConfig.port,\n    });\n    this.pool.on(\"error\", (error, client) => {\n      console.error(`Error On PG Pool. Reason: ${error}`);\n    });\n    return this.pool.query(sqlQuery);\n  }\n\n  executeQueryAsPromise(sqlQuery, isInsert = false) {\n    const queryMessage = {\n      success: false,\n      status: 200,\n      message: \"\",\n    };\n\n    return new Promise(async (resolve, reject) => {\n      try {\n        const result = await this.executeQuery(sqlQuery);\n        if (isInsert) {\n          queryMessage.success = true;\n          queryMessage.status = 201;\n          queryMessage.message = \"SQL Insert Query completed successful.\";\n          queryMessage.data = result.rows;\n          resolve(queryMessage);\n        } else if (result.rowCount === 0) {\n          queryMessage.status = 204;\n          queryMessage.message =\n            \"Requested data no longer present in the database.\";\n          resolve(queryMessage);\n        } else {\n          queryMessage.success = true;\n          queryMessage.status = 200;\n          queryMessage.message = \"SQL Query completed successful.\";\n          queryMessage.data = result.rows;\n          resolve(queryMessage);\n        }\n        this.pool.end();\n      } catch (err) {\n        queryMessage.status = 400;\n        queryMessage.message = \"SQL Query failed.\";\n        queryMessage.error = err.message;\n        reject(queryMessage);\n        this.pool.end();\n      }\n    });\n  }\n}\n\nmodule.exports = DataService;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fc2914bd5237a0662d11466b79ce86693ac9aeb0","contentHash":"d8881d3705c8c74a03e16d75daf6a4a17e4c4b98b23861c3cce83622a1f0e668"}}